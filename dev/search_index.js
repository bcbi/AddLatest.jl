var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API","title":"API","text":"CurrentModule = AddLatest","category":"page"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/","page":"API","title":"API","text":"Modules = [AddLatest]","category":"page"},{"location":"api/#AddLatest.AbstractRegistry","page":"API","title":"AddLatest.AbstractRegistry","text":"Supertype for all registry types.\n\n\n\n\n\n","category":"type"},{"location":"api/#AddLatest.GitRegistry","page":"API","title":"AddLatest.GitRegistry","text":"A registry that is cloned using Git.\n\nExamples\n\njulia> registries = [GitRegistry(\"https://github.com/JuliaRegistries/General.git\")]\n\njulia> Pkg.add(latest(\"Example\"; registries = registries))\n\n\n\n\n\n","category":"type"},{"location":"api/#AddLatest.LocalFolderRegistry","page":"API","title":"AddLatest.LocalFolderRegistry","text":"A registry that already exists in a folder on the filesystem.\n\nExamples\n\njulia> registries = [LocalFolderRegistry(\"/path/to/my/registry/\")]\n\njulia> Pkg.add(latest(\"Example\"; registries = registries))\n\n\n\n\n\n","category":"type"},{"location":"api/#AddLatest.RegistryParsingCache","page":"API","title":"AddLatest.RegistryParsingCache","text":"A cache for holding the results of parsed registries.\n\nExamples\n\njulia> cache = RegistryParsingCache()\n\njulia> Pkg.add(latest(\"PkgA\", cache))\n\njulia> Pkg.add(latest(\"PkgB\", cache))\n\njulia> Pkg.add(latest(\"PkgC\", cache))\n\n\n\n\n\n","category":"type"},{"location":"api/#AddLatest.VersionedPackage","page":"API","title":"AddLatest.VersionedPackage","text":"A specific version of a package.\n\nFields:\n\nname::String\nuuid::UUID\nversion::String\ntree::String\n\n\n\n\n\n","category":"type"},{"location":"api/#AddLatest.latest-Tuple{AbstractString,Base.UUID}","page":"API","title":"AddLatest.latest","text":"latest(name::AbstractString,\n       uuid::UUID;\n       cache = RegistryParsingCache(),\n       registries = [],\n       include_default_registries::Bool = true)\n\nGet the latest registered version of a package, given the name and UUID of the package.\n\nExamples\n\njulia> Pkg.add(latest(\"Example\", UUID(\"7876af07-990d-54b4-ab0e-23690620f79a\")))\n\n\n\n\n\n","category":"method"},{"location":"api/#AddLatest.latest-Tuple{AbstractString}","page":"API","title":"AddLatest.latest","text":"latest(name::AbstractString;\n       cache = RegistryParsingCache(),\n       registries = [],\n       include_default_registries::Bool = true)\n\nGet the latest registered version of a package, given the name of the package.\n\nExamples\n\njulia> Pkg.add(latest(\"Example\"))\n\n\n\n\n\n","category":"method"},{"location":"api/#AddLatest.parse_registry-Tuple{GitRegistry}","page":"API","title":"AddLatest.parse_registry","text":"parse_registry(registry::GitRegistry)\n\nClone a registry via Git and parse it.\n\nExample usage:\n\njulia> registry = GitRegistry(\"https://github.com/JuliaRegistries/General.git\")\n\njulia> parseresult = parse_registry(registry)\n\n\n\n\n\n","category":"method"},{"location":"api/#AddLatest.parse_registry-Tuple{LocalFolderRegistry}","page":"API","title":"AddLatest.parse_registry","text":"parse_registry(registry::LocalFolderRegistry)\n\nParse a registry located at the filesystem path path_to_registry.\n\nExample usage:\n\njulia> registry = LocalFolderRegistry(\"/path/to/my/registry/\")\njulia> parseresult = parse_registry(registry)\n\n\n\n\n\n","category":"method"},{"location":"examples/","page":"Examples","title":"Examples","text":"CurrentModule = AddLatest","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"using AddLatest\nusing Pkg\n\nPkg.add(latest(\"Example\"))","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using AddLatest\nusing Pkg\nusing UUIDs\n\nPkg.add(latest(\"Example\", UUID(\"7876af07-990d-54b4-ab0e-23690620f79a\")))","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using AddLatest\nusing Pkg\n\nPkg.add(latest(\"Example\"))\nPkg.pin(latest(\"Example\"))","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using AddLatest\nusing Pkg\nusing UUIDs\n\nPkg.add(latest(\"Example\", UUID(\"7876af07-990d-54b4-ab0e-23690620f79a\")))\nPkg.pin(latest(\"Example\", UUID(\"7876af07-990d-54b4-ab0e-23690620f79a\")))","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = AddLatest","category":"page"},{"location":"#AddLatest","page":"Home","title":"AddLatest","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"AddLatest.jl queries multiple Julia package registries and determines the latest available version of each package.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This makes it easy to ensure that you are installing the latest version of a Julia package.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The source code is available in the GitHub repository.","category":"page"}]
}
